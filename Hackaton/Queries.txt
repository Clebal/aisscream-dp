SERGIO - Mínimo, máximo, media y desviación estándar de los banners por cada patrocinador.(servicio de Sponsorship)

Query: 
select  avg(cast((select count(sp) from Sponsorship sp where sp.sponsor.id=s.id) as float )), min(cast((select count(sp) from Sponsorship sp where sp.sponsor.id=s.id) as int )), max(cast((select count(sp) from Sponsorship sp where sp.sponsor.id=s.id) as int )), sqrt(sum((select count(sp) from Sponsorship sp where sp.sponsor.id=s.id)*(select count(sp) from Sponsorship sp where sp.sponsor.id=s.id))/(select count(s2) from Sponsor s2)-avg(cast((select count(sp) from Sponsorship sp where sp.sponsor.id=s.id) as float ))*avg(cast((select count(sp) from Sponsorship sp where sp.sponsor.id=s.id) as float ))) from Sponsor s

Método del servicio: avgMinMaxStandarDesviationBannersPerSponsor 

CARLOS - La media de la ratio de etiquetas por chollos. (Servicio de Tag)

Query: select avg(1.0*(select cast((count(t)) as float)/cast((select count(t1)*1.0 from Tag t1) as int) from Tag t where b member of t.bargains)) from Bargain b

Método del servicio: avgRatioTagsPerBargain

VILLARIN - Chollo con más y menos patrocinadores. (Servicio de Bargain)

Query:select b from Bargain b where cast((select count(s) from Sponsorship s where s.bargain.id = b.id )as float) = (select max(cast((select count(s2) from Sponsorship s2 where s2.bargain.id=b2.id)as float)) from Bargain b2)

url= bargain/administrator/listWithMoreSponsorships.do

Query: select b from Bargain b where cast((select count(s) from Sponsorship s where s.bargain.id = b.id )as float) = (select min(cast((select count(s2) from Sponsorship s2 where s2.bargain.id=b2.id)as float)) from Bargain b2)

url= bargain/administrator/listWithLessSponsorships.do

SANTOS - Los chollos que estén en más listas de  deseo. (Servicio de Bargain)

Query: select b from Bargain b ORDER BY cast((select count(u) from User u where b member of u.wishList) as float)

url= bargain/administrator/isInMoreWishList.do

SERGIO - Encuesta/s m‡s popular/es (Servicio de Survey)
select s from Survey s where (cast((select sum(a2.counter) from Answer a2 where a2.question.survey.id = s.id) as float)) >= (cast((select avg(cast(( select sum(a2.counter) from Answer a2 where a2.question.survey.id = s2.id) as float)) from Survey s2) as float ));

url = survey/administrator/morePopular.do

CARLOS - Ratio de notificaciones vistas sobre el total.(Servicio de Notification)

Query: select cast((count(n)) as float)/(select count(n1) from Notification n1) from Notification n where n.visited=true

Método del servicio: ratioNotificationsPerTotal

VILLARIN - Media de usuarios que tienen una participación en una rifa respecto al total. (Servicio de User)

Método del servicio: avgUsersWithParticipationsPerTotal

Query: select avg(1.0*(select cast((count(u)) as float) from Participation p, User u where p.groupon.id = b.id and p.user.id = u.id))/cast((select count(u1)*1.0 from User u1) as int) from Groupon b

SANTOS - Las empresas que han realizado más del 15%, 10% y 5% de las encuestas llevadas a  cabo por empresas. (Servicio de Company)

Query: select c from Company c where cast((select count(s) from Survey s where 'COMPANY' member of s.surveyer.userAccount.authorities) as float )*?1 <= (select count(s) from Survey s where s.surveyer.id = c.id )

url= company/administrator/writerOfMorePercentage.do?percentage=*  percentage es un double

CARLOS - Top-5 usuarios que más valoraciones han  realizado. (Servicio de user)

Query: select u from User u ORDER BY cast((select count(e.user) from Evaluation e where e.user=u) as float) DESC

url = user/administrator/topFiveUsersMoreValorations.do

VILLARIN - Ratio de usuarios que realizan  comentarios. (Servicio de User)

Método del servicio: ratioUsersWithComments

Query: select (cast((count(distinct u))as float))/(cast((select count(distinct u1) from User u1)as float)) from User u, Comment c where c.user.id = u.id; 

SANTOS - Usuarios que han realizado más del 10% de interacciones con el sistema. (Servicio de User)

Query: select u from User u where u.points > (select sum(u2.points) from User u2)*0.1

url = user/administrator/more10PercentageInteractions.do

SERGIO - Categorías con más chollos que la  media. (Servicio de Categoria)
select c from Category c where (cast((select count(b) from Bargain b where b member of c.bargain)as float)) >= (cast((select avg(cast((select count(b2) from Bargain b2 where b2 member of c2.bargain)as float)) from Category c2)as float));

url= category/administrator/moreBargainThanAverage.do

CARLOS - Las empresas que proveen más etiquetas  a sus chollos. (Servicio de empresa)

Query: select c from Company c order by cast((select count(t) from Tag t join t.bargains b where b.company.id= c.id) as float) DESC

url= company/administrator/companiesWithMoreTags.do

VILLARIN - La media del ratio de chollos por  categorías. (Servicio de Bargain)

Método del servicio: avgRatioBargainPerCategory

Query: select avg(1.0*(select cast((count(c)) as float)/cast((select count(c1)*1.0 from Category c1) as int) from Category c where b member of c.bargains)) from Bargain b

VILLARIN - Usuario con mayor media de número de caracteres escritos en sus valoraciones a las  empresas. (Servicio de user)

url = user/administrator/moreAverageCharacterLenght.do

Query: select u from User u where cast((select avg(length(ev.content)) from Evaluation ev where ev.user.id = u.id )as float) = (select max(cast((select avg(length(ev2.content)) from Evaluation ev2 where ev2.user.id = u2.id)as float)) from User u2)

SERGIO - Conjuntas con un 10% de más  participación que la media. (Servicio de Groupon)

select g from Groupon g where (cast((select count(p) from Participation p where p.groupon.id = g.id)as float)) >= 0.1*(cast((select avg(cast((select count(p2) from Participation p2 where p2.groupon.id = g2.id)as float)) from Groupon g2)as float));

url= groupon/administrator/tenPercentageMoreParticipationsThanAverage.do

CARLOS - Mínimo, máximo, media y desviación estándar del descuento de un chollo. (Servicio de Bargain)

Query: select min((b.originalPrice - b.price)/(b.originalPrice * 1.0)), max((b.originalPrice - b.price)/(b.originalPrice * 1.0)), avg((b.originalPrice - b.price)/(b.originalPrice * 1.0)), stddev((b.originalPrice - b.price)/(b.originalPrice * 1.0)) from Bargain b

Método del servicio: minMaxAvgStandarDesviationDiscountPerBargain

VILLARIN - Mínimo, máximo, media y desviación estándar del descuento de una conjunta. (Servicio de Groupon)

Método del servicio: minMaxAvgStandarDesviationDiscountPerGroupon

Query: select min((g.originalPrice - g.price)/(g.originalPrice * 1.0)), max((g.originalPrice - g.price)/(g.originalPrice * 1.0)), avg((g.originalPrice - g.price)/(g.originalPrice * 1.0)), stddev((g.originalPrice - g.price)/(g.originalPrice * 1.0)) from Groupon g;

SANTOS - Usuario que más rifas ha ganado. (Servicio de User)

Query: select u from User u where cast((select count(r.winner) from Raffle r where r.winner.id = u.id )as float) = (select max(cast((select count(r2.winner) from Raffle r2 where r2.winner.id=u2.id)as float)) from User u2)

url= user/administrator/moreWonRaffles.do

SERGIO - Usuario que ha comprado más tiques para una rifa y el que menos. (Servicio de User)
(Pueden ser varios)
El que m‡s: select u from User u where (cast((select count(t2) from Ticket t2 where t2.user.id = u.id)as float)) = (select max(cast((select count(t) from Ticket t where t.user.id = u2.id)as float)) from User u2);

url= user/administrator/purchaseMoreTickets.do

El que menos: select u from User u where (cast((select count(t2) from Ticket t2 where t2.user.id = u.id)as float)) = (select min(cast((select count(t) from Ticket t where t.user.id = u2.id)as float)) from User u2);

url= user/administrator/purchaseLessTickets.do

CARLOS - Media de tiques comprados por los usuarios para una rifa. (Servicio de Ticket)

Query: select avg(cast((select count(t) from Ticket t where t.raffle.id=r.id) as float)) from Raffle r

Método del servicio: avgTicketsPurchaseByUsersPerRaffle

VILLARIN - Usuario que ha comprado más del 25% del total de tiques vendidos en total para todas  las rifas. (Servicio de User)

url = user/administrator/purchase25PercentageMoreTotalForAllRaffles.do

select u from User u where cast((select count(t2) from Ticket t2 where t2.user.id = u.id) as float ) >= 0.25*(select count(t) from Ticket t);
